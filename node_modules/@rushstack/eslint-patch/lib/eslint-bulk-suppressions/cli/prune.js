"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.pruneAsync = void 0;
const print_help_1 = require("./utils/print-help");
const runEslint_1 = require("./runEslint");
const constants_1 = require("../constants");
const bulk_suppressions_file_1 = require("../bulk-suppressions-file");
async function pruneAsync() {
    const args = process.argv.slice(3);
    if (args.includes('--help') || args.includes('-h')) {
        (0, print_help_1.printPruneHelp)();
        process.exit(0);
    }
    if (args.length > 0) {
        throw new Error(`@rushstack/eslint-bulk: Unknown arguments: ${args.join(' ')}`);
    }
    process.env[constants_1.ESLINT_BULK_PRUNE_ENV_VAR_NAME] = '1';
    const allFiles = getAllFilesWithExistingSuppressionsForCwd();
    console.log(`Pruning suppressions for ${allFiles.length} files...`);
    await (0, runEslint_1.runEslintAsync)(allFiles, 'prune');
}
exports.pruneAsync = pruneAsync;
function getAllFilesWithExistingSuppressionsForCwd() {
    const { jsonObject: bulkSuppressionsConfigJson } = (0, bulk_suppressions_file_1.getSuppressionsConfigForEslintrcFolderPath)(process.cwd().replace(/\\/g, '/'));
    const allFiles = new Set();
    for (const { file: filePath } of bulkSuppressionsConfigJson.suppressions) {
        allFiles.add(filePath);
    }
    return Array.from(allFiles);
}
//# sourceMappingURL=prune.js.map